'use strict';

var _charset = require('./charset');

module.exports = function (randomBytes) {
  return function () {
    var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;
    var charset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'alphanumeric';

    if (!randomBytes) return Promise.reject('Unsupported');

    var chars = (0, _charset.getCharset)(charset);
    var charsLen = chars.length;
    var maxByte = 256 - 256 % charsLen;
    var targetLength = length;

    return new Promise(function (resolve, reject) {
      function addRandomString(currentString) {
        var string = currentString;

        // crypto.randomBytes() is used in nodejs
        var size = Math.ceil(targetLength * 256 / maxByte);

        randomBytes(size, function (err, buf) {
          if (err) reject(err);

          for (var i = 0; i < buf.length && targetLength > 0; ++i) {
            var randomByte = buf.readUInt8(i);
            if (randomByte < maxByte) {
              string += chars.charAt(randomByte % charsLen);
              --targetLength;
            }
          }

          if (targetLength > 0) {
            addRandomString(string);
          } else {
            resolve(string);
          }
        });
      }

      addRandomString('');
    });
  };
};