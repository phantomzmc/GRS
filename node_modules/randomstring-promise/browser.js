'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function () {
  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;
  var charset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'alphanumeric';

  if (!windowCrypto) return Promise.reject('Unsupported');

  var chars = (0, _charset.getCharset)(charset);
  var charsLen = chars.length;
  var maxByte = 256 - 256 % charsLen;
  var targetLength = length;

  var string = '';
  return new Promise(function (resolve, reject) {
    while (targetLength > 0) {
      // window.crypto.getRandomValues() is used if available (browser env)
      var size = Math.min(Math.ceil(targetLength * 256 / maxByte), 65535);
      var buf = new Uint8Array(size);
      windowCrypto.getRandomValues(buf);

      for (var i = 0; i < buf.length && targetLength > 0; ++i) {
        var randomByte = buf[i];
        if (randomByte < maxByte) {
          string += chars.charAt(randomByte % charsLen);
          --targetLength;
        }
      }
    }

    resolve(string);
  });
};

var _charset = require('./charset');

var windowCrypto = typeof window !== 'undefined' && (window.crypto || window.msCrypto);